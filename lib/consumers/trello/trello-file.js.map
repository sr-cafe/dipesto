{"version":3,"sources":["../../../src/consumers/trello/trello-file.es6"],"names":[],"mappings":";;;;;;;;AAAA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;AACA;;;;;;;;;;IAGqB;AACpB,UADoB,UACpB,CAAY,IAAZ,EAAiB;wBADG,YACH;;AAChB,OAAK,IAAL,GAAY,IAAZ,CADgB;AAEhB,MAAI,WAAW,eAAK,IAAL,CAAU,KAAK,MAAL,EAAa,KAAK,IAAL,CAAlC,CAFY;AAGhB,OAAK,WAAL,GAAmB,KAAK,IAAL,CAAU,WAAV,CAAsB,GAAtB,CAA0B,UAAS,UAAT,EAAoB;AAChE,UAAO,+BAAqB,UAArB,EAAiC,QAAjC,CAAP,CADgE;GAApB,CAA7C,CAHgB;EAAjB;;cADoB;;0BASZ,OAAM;AACb,QAAK,WAAL,GAAmB,KAAK,WAAL,CAAiB,GAAjB,CAAqB,UAAS,UAAT,EAAoB;AAC3D,WAAO,WAAW,OAAX,CAAmB,KAAnB,CAAP,CAD2D;IAApB,CAAxC,CADa;AAIb,UAAO,IAAP,CAJa;;;;uBAOT,QAAO;;;AACX,UAAO,mBAAQ,GAAR,CAAY,KAAK,WAAL,EAAkB,UAAS,UAAT,EAAoB;AACxD,WAAO,WAAW,IAAX,CAAgB,MAAhB,CAAP,CADwD;IAApB,CAA9B,CAGN,IAHM,CAGD,YAAM;AACX,iBADW;IAAN,CAHN,CADW;;;;gCASC;AACZ,OAAI,UAAU,KAAK,IAAL,CAAU,OAAV,CAAkB,QAAlB,CAA2B,MAA3B,CAAkC,UAAS,OAAT,EAAiB;AAChE,WAAO,QAAQ,IAAR,2BAAP,CADgE;IAAjB,CAAlC,CAEX,CAFW,EAER,MAFQ,CADF;;AAKZ,QAAK,WAAL,GAAmB,gBAAE,MAAF,CAAS,gBAAE,IAAF,CAAO,gCAAP,CAAT,EAAmD,KAAK,WAAL,CAAtE,CALY;AAMZ,QAAK,WAAL,CAAiB,OAAjB,GANY;;AAQZ,OAAI,WAAW,KAAK,WAAL,CAAiB,GAAjB,CAAqB,UAAS,UAAT,EAAoB;AACvD,WAAO,WAAW,MAAX,EAAP,CADuD;IAApB,CAAhC,CARQ;;AAYZ,OAAI,WAAW,KAAK,IAAL,CAAU,OAAV,CAAkB,KAAlB,CAAwB,IAAxB,CAAX,CAZQ;;AAcZ,YAAS,OAAT,CAAiB,UAAS,OAAT,EAAiB;AACjC,QAAI,aAAa,QAAQ,KAAR,CAAc,KAAd;QAChB,WAAW,OAAC,CAAQ,KAAR,CAAc,GAAd,GAAoB,QAAQ,KAAR,CAAc,KAAd,GAAuB,CAA5C;QACX,UAAU,QAAQ,OAAR;QACV,aAAa,QAAQ,OAAR,CAJmB;;AAMjC,eAAW,OAAX,CAAmB,QAAQ,KAAR,CAAnB,CANiC;AAOjC,eAAW,IAAX,CAAgB,QAAQ,GAAR,CAAhB,CAPiC;;AASjC,iBAAa,WAAW,GAAX,CAAe,UAAS,IAAT,EAAc;AACzC,YAAO,UAAQ,IAAR,CADkC;KAAd,CAA5B,CATiC;;AAajC,aAAS,MAAT,CAAgB,UAAhB,EAA4B,QAA5B,EAAsC,WAAW,IAAX,CAAgB,IAAhB,CAAtC,EAbiC;IAAjB,CAAjB,CAdY;;AA8BZ,WAAQ,GAAR,CAAY,QAAZ,EA9BY;;AAgCZ,OAAI,WAAW,eAAK,IAAL,CAAU,KAAK,IAAL,CAAU,MAAV,EAAkB,KAAK,IAAL,CAAU,IAAV,CAAvC,CAhCQ;;AAkCZ,gBAAG,UAAH,CAAc,QAAd,EAAwB,WAAS,MAAT,CAAxB,CAlCY;AAmCZ,gBAAG,aAAH,CAAiB,QAAjB,EAA2B,SAAS,IAAT,CAAc,IAAd,CAA3B,EAAgD,EAAC,UAAU,MAAV,EAAjD,EAnCY;;AAqCZ,UAAO,IAAP,CArCY;;;;QAzBO","file":"trello-file.js","sourcesContent":["import path from 'path';\nimport Promise from 'bluebird';\nimport R from 'ramda';\nimport TrelloAnnotation from './trello-annotation';\nimport {LINE_TYPE_MULTI} from '../../core/rules';\nimport fs from 'fs';\n// let fs = Promise.promisifyAll(require('fs'));\n\nexport default class TrelloFile{\n\tconstructor(file){\n\t\tthis.file = file;\n\t\tlet filepath = path.join(file.folder, file.name);\n\t\tthis.annotations = this.file.annotations.map(function(annotation){\n\t\t\treturn new TrelloAnnotation(annotation, filepath);\n\t\t});\n\t}\n\n\tprocess(lists){\n\t\tthis.annotations = this.annotations.map(function(annotation){\n\t\t\treturn annotation.process(lists);\n\t\t});\n\t\treturn this;\n\t}\n\n\tpost(trello){\n\t\treturn Promise.map(this.annotations, function(annotation){\n\t\t\treturn annotation.post(trello);\n\t\t})\n\t\t.then(() => {\n\t\t\treturn this;\n\t\t})\n\t}\n\n\twriteToDisk(){\n\t\tlet markers = this.file.matcher.matchers.filter(function(matcher){\n\t\t\treturn matcher.type === LINE_TYPE_MULTI;\n\t\t})[0].marker;\n\n\t\tthis.annotations = R.sortBy(R.prop('annotation.comment.range.start'), this.annotations);\n\t\tthis.annotations.reverse();\n\n\t\tlet contents = this.annotations.map(function(annotation){\n\t\t\treturn annotation.toFile();\n\t\t})\n\n\t\tlet original = this.file.content.split('\\n');\n\n\t\tcontents.forEach(function(content){\n\t\t\tlet startIndex = content.range.start,\n\t\t\t\tendIndex = (content.range.end - content.range.start) + 1,\n\t\t\t\tpadding = content.padding,\n\t\t\t\tnewContent = content.content;\n\n\t\t\tnewContent.unshift(markers.start);\n\t\t\tnewContent.push(markers.end);\n\n\t\t\tnewContent = newContent.map(function(line){\n\t\t\t\treturn padding+line;\n\t\t\t})\n\n\t\t\toriginal.splice(startIndex, endIndex, newContent.join('\\n'));\n\t\t});\n\n\t\tconsole.log(original);\n\n\t\tlet filepath = path.join(this.file.folder, this.file.name);\n\n\t\tfs.renameSync(filepath, filepath+'.bak');\n\t\tfs.writeFileSync(filepath, original.join('\\n'), {encoding: 'utf8'});\n\n\t\treturn this;\n\n\t}\n}\n"]}