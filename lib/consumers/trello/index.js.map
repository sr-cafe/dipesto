{"version":3,"sources":["../../../src/consumers/trello/index.es6"],"names":[],"mappings":"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","file":"index.js","sourcesContent":["import path from 'path';\nimport R from 'ramda';\nimport Promise from 'bluebird';\nimport Trello from 'node-trello';\n\nimport TrelloFile from './trello-file';\nimport * as ENDPOINTS from './endpoints';\n\nlet mapInputFilesToTrelloFiles = function(files){\n\treturn files.map(function(file){\n\t\treturn new TrelloFile(file);\n\t});\n}\n\nlet filterBoardByName = R.curry(function(name, boards){\n\treturn boards.filter(function(board){\n\t\treturn board.name === name;\n\t});\n});\n\nlet getTrelloBoard = R.curry(function(trello, name){\n\n\tlet filterBoard = filterBoardByName(name);\n\n\treturn new Promise(function(resolve, reject){\n\t\ttrello.get(ENDPOINTS.BOARDS_URL, function(err, boards){\n\t\t\tif(err){\n\t\t\t\treject(err);\n\t\t\t}\n\t\t\telse{\n\t\t\t\tlet board = filterBoard(boards);\n\n\t\t\t\tif(!board.length){\n\t\t\t\t\treject(new Error(`No board found with name ${name}`));\n\t\t\t\t}\n\t\t\t\telse{\n\t\t\t\t\tresolve(board[0]);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t});\n});\n\nlet getTrelloBoardLists = R.curry(function(trello, board){\n\tlet options = {\n\t\tcards:'open'\n\t};\n\n\treturn new Promise(function(resolve, reject){\n\t\ttrello.get(ENDPOINTS.LISTS_URL(board.id), options, function(err, data){\n\t\t\tif(err){\n\t\t\t\treject(err);\n\t\t\t}\n\t\t\telse{\n\t\t\t\tresolve(data);\n\t\t\t}\n\t\t});\n\t})\n});\n\nlet processFilesWithLists = R.curry(function(files, lists){\n\treturn files.map(function(file){\n\t\treturn file.process(lists);\n\t});\n});\n\nlet postFilesToTrello = R.curry(function(trello, files){\n\treturn Promise.map(files, function(file){\n\t\treturn file.post(trello);\n\t})\n});\n\nexport default class DipestoConsumer{\n\tconstructor(key, token, boardName){\n\t\tthis.trello = new Trello(key, token);\n\t\tthis.boardName = boardName;\n\t}\n\n\trun(_input){\n\t\tlet input = JSON.parse(_input),\n\t\t\tfiles = mapInputFilesToTrelloFiles(input.files);\n\n\t\tlet getBoard = getTrelloBoard(this.trello),\n\t\t\tgetBoardLists = getTrelloBoardLists(this.trello),\n\t\t\tprocessFiles = processFilesWithLists(files),\n\t\t\tpostFiles = postFilesToTrello(this.trello);\n\n\t\treturn R.pipeP(\n\t\t\tgetBoard,\n\t\t\tgetBoardLists,\n\t\t\tprocessFiles,\n\t\t\tpostFiles,\n\t\t\tfunction(files){\n\t\t\t\tfiles.map(function(file){\n\t\t\t\t\tfile.writeToDisk();\n\t\t\t\t})\n\t\t\t}\n\t\t)(this.boardName);\n\n\t}\n}\n\n\n// import Board from './board';\n// import TrelloAnnotation from './trello-annotation';\n//\n// let filesToTrelloAnnotations = function(files){\n// \treturn files.reduce(function(previous, current){\n// \t\tlet filepath = path.join(current.folder, current.name),\n// \t\t\tannotationMapper = annotationToTrelloAnnotation(filepath)\n// \t\treturn previous.concat(current.annotations.map(annotationMapper));\n// \t}, [])\n// };\n//\n// let annotationToTrelloAnnotation = R.curry(function(filepath, annotation){\n// \treturn new TrelloAnnotation(annotation, filepath);\n// });\n//\n// let listAnnotationsGrab = R.curry(function(annotations, lists){\n// \treturn lists.map(function(list){\n// \t\treturn list.grabAnnotations(annotations);\n// \t})\n// });\n//\n// export default class DipestoTrelloConsumer{\n// \tconstructor(key, token, boardName){\n// \t\tthis.trello = new Trello(key, token);\n// \t\tthis.boardName = boardName;\n// \t}\n//\n// \trun(_input){\n// \t\tlet input = JSON.parse(_input),\n// \t\t\tannotations = filesToTrelloAnnotations(input.files).slice(0, 1);\n//\n// \t\tlet board = new Board(this.trello);\n// \t\treturn board.getByName(this.boardName)\n// \t\t\t.then(board.getLists.bind(board))\n// \t\t\t.then(listAnnotationsGrab(annotations))\n// \t\t\t.then(function(lists){\n// \t\t\t\treturn lists.map(function(list){\n// \t\t\t\t\tlist.update();\n// \t\t\t\t})\n// \t\t\t})\n// \t}\n//\n// }\n"]}